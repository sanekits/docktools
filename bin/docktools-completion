# docktools-completion
# vim: filetype=sh :
# Bash autocomplete for docktools
# Symlink this into ~/.bash_completion.d/docktools



# docktools-autocomplete


stub922() {
    [[ -n $stub922_tty ]] || return  # Define this var like /dev/ttyNN to enable diagnostics
    stub922_tty=${stub922_tty:-/dev/stderr}
    local log=/dev/pts/5
    stub922_cnt=${stub922_cnt:-0}
    (( stub922_cnt++ ))
    echo -n "stub922[$stub922_cnt]: " >$log
    printf "<%s> " "$@" >$log
    echo > $log
}

_dksh_list_kits() {
    ( cd $HOME/.local/bin && command ls */Kitname | command xargs dirname )
}

_dockershell() { # Shell completion for dockershell.sh. Place this file in ~/.bash_completion.d/docktools
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    #stub922 words "cw=" "$COMP_CWORD" "wx=" "${COMP_WORDS[COMP_CWORD - 1]}" "words=" "${COMP_WORDS[@]}"

    # The main job is usually to set 'opts' to the set of meaningful commands:
    if (( COMP_CWORD == 1 )); then
        opts="$(docker ps --format '{{.Names}}' )"
    elif [[ ${COMP_WORDS[COMP_CWORD - 1]} == "-u" ]]; then
        opts=$(dockershell.sh --show-users-in-container ${COMP_WORDS[1]} | awk -F ':' '{print $1}' )
    elif [[ ${COMP_WORDS[COMP_CWORD - 1]} == "-k" ]]; then
        opts="$( _dksh_list_kits )"
    else
        opts="-u -k"
    fi
    COMPREPLY=( $(compgen -W "${opts}" -- "${cur}" ) )
    return 0
}

_word_in_list() {
    local word="$1"
    local list=":${2// /:}:"
    [[ "$list" == *:${word}:* ]]
}

_docker_make_container() {
    # Shell completion for docker-make-container.sh (a.k.a. dockmk)
    local dockmk_sh=${HOME}/.local/bin/docktools/docker-make-container.sh
    local cur prev opts
    local main_flags="-h --help --edit-recipe --list-recipes --make-recipe --recipe-path --recipe-root"
    local recipes=$( ( $dockmk_sh --list-recipes; echo help) | tr '\n' ' ' )
    local recipe_opts="RunCommand= Volumes="
    COMPREPLY=();
    cur="${COMP_WORDS[COMP_CWORD]}";
    prev="${COMP_WORDS[COMP_CWORD-1]}";

    stub922 ENTRY CWORD "$COMP_CWORD" 'cur:' "$cur" 'prev:' "$prev" \
        $'\n ::recipes:' "$recipes" \
        $'\n ::main_flags:' "$main_flags" \
        $'\n ::all' "${COMP_WORDS[COMP_CWORD]}"

    if [[ $COMP_CWORD == 1 ]]; then
        opts=${recipes} ;
        [[ "$cur" == -* ]] \
            && opts="${main_flags}"

    elif _word_in_list "--" "${COMP_WORD[@]}"; then
        # Once the user does --, they're on their own to define the run command
        opts=""
    else
        case $cur in
            -*)
                opts="${main_flags}" ;;
            *=*)
                if _word_in_list "$prev" "${recipes}"; then
                    opts="RunCommand= Shellkits= Remove= Iterm= Volumes= ExtraVols= "
                    stub922 VX.2
                else
                    opts="${recipes} ${main_flags}"
                    stub922 VX.3
                fi
                ;;
        esac
    fi
    stub922 COMMIT opts "$opts"
    COMPREPLY=($(compgen -W "${opts}" -- "${cur}" ));
    stub922 $'\n -- end --\n'
    return 0
}

complete -F _dockershell dockershell.sh
complete -F _dockershell docksh
complete -F _docker_make_container docker-make-container.sh
complete -F _docker_make_container dockmk
